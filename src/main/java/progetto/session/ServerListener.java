package progetto.session;

import progetto.Server;
import progetto.Session;

import java.io.Serializable;

public interface ServerListener<ID extends Comparable<ID> & Serializable> {
    /**
     * Method to notify a new session has been accepted by a server
     * @param server Reference to the server object that this event is generated by.
     *               Useful in case a class registers to multiple server the same listener
     * @param session Session that has just been accepted
     */
    void onSessionAccepted(Server<ID> server, Session<ID> session);

    /**
     * Method to notify a session has been disconnected from a server
     * @param server Reference to the server object that this event is generated by.
     *               Useful in case a class registers to multiple server the same listener
     * @param session Session that has just been disconnected
     */
    void onSessionClosed(Server<ID> server, Session<ID> session);

    /**
     * Method to notify that a server has been closed.
     * @param server Reference to the server object that this event is generated by.
     * @param t      Throwable (Exception) that caused the server closure. Might be null.
     */
    void onServerClosed(Server<ID> server, Throwable t);
}
